package meta;

import tags.Tuple;

import java.util.Objects;
import java.util.Vector;

public class Node extends Tuple  {
    private Vector<Double> coordinate = new Vector<>();
    private double distanceToParent = -1;
    private double angle = -1;
    private String object = "";
    private String type = ""; // w for waypoint, o for object, wall for wall

    public Node() {

    }

    public Node(double x, double y, String type) {
        Vector<Double> v = new Vector<>(2);
        v.add(0, x);
        v.add(1, y);
        this.setCoordinate(v);
        this.type = type;
        String[] s={"x","y"};
        double[] i={x,y};
        super.setTuple(("NODE"+type),s,i);
    }


    // Below are all generated by IntelliJ
    public Vector<Double> getCoordinate() {
        return coordinate;
    }

    public void setCoordinate(Vector<Double> coordinate) {
        this.coordinate = coordinate;
    }

    public double getDistanceToParent() {
        return distanceToParent;
    }

    public void setDistanceToParent(double distanceToParent) {
        this.distanceToParent = distanceToParent;
    }

    public double getAngle() {
        return angle;
    }

    public void setAngle(double angle) {
        this.angle = angle;
    }

    public String getObject() {
        return object;
    }

    public void setObject(String object) {
        this.object = object;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Override
    public String simpleToString() {
        return (this.getType()+this.getCoordinate().toString());
    }
    public boolean equals(Node n){
        return(this.type.equals(n.getType())&&this.coordinate.equals(n.getCoordinate()));
    }
}
